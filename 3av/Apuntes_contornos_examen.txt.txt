Instalar maven -> sudo apt install maven 
Ver versión de maven -> mvn --version v

Colocarte donde quieres crear el proyecto de maven
CREAR PROYECTO -> mvn archetype:generate

Opcion 1.4
groupID: nombre de la empresa PROHIBIDO PONER ALGUN CARACTER EN MAYUSCULAS
artifactID: nombre del proyecto
nombre del paquete: el q quieras.

ENTRAR EN ECLIPSE

COSAS A CAMBIAR EN EL POM ***
->Cambiar jdk1.7 a jdk21
->eliminar el plugin junit 4.11
->añadir el junit jupiter (5) buscandolo en mvnrepository.com y añadiendolo al pom

clean plugin 3.3.2
resources plugin 3.3.1
mvn compiler plugin 3.13.0
jar 3.4.1
install 3.1.2
deploy 3.1.2


BUSCAR SITE-PLUGIN 4.0.0 buscandolo en mvnrepository.com y añadiendolo al pom

project info reports plugin 3.5.0

AÑADIR maven-javadoc-plugin buscandolo en mvnrepository.com y añadiendolo al pom

OJO! Lo que son dependencias ponerlo en dependencias, plugins en plugins

DESPUES: click derecho sobre el proyecto -> maven -> actualizar proyecto

Empaquetar -> mvn package

mvn compile
mvn clean
mvn javadoc


***POM A AÑADIR***
<dependencies>
    <!-- https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-api -->
    <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter-api</artifactId>
        <version>5.11.0-M1</version>
        <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <pluginManagement><!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->
      <plugins>
        <!-- clean lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#clean_Lifecycle -->
        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <!-- default lifecycle, jar packaging: see https://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_jar_packaging -->
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.13.0</version>
          <configuration>
            <source>21</source>
            <target>21</target>
          </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>3.2.5</version>
        </plugin>
        <plugin>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.5.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.8.2</version>
        </plugin>
        <!-- site lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#site_Lifecycle -->
        <plugin>
          <artifactId>maven-site-plugin</artifactId>
          <version>3.7.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-project-info-reports-plugin</artifactId>
          <version>3.0.0</version>
        </plugin>
        <plugin>
            <!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-javadoc-plugin -->
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
            <version>3.6.3</version>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

maven package -> para crear el .jar (está en la carpeta target del proyecto)
añadir al pom:
<plugin>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.0.2</version>
          <configuration>
            <archive>
              <manifest>
                <addClasspath>true</addClasspath>
                <mainClass>micamasl.App</mainClass>
              </manifest>
            </archive>
          </configuration>
        </plugin>

-> para indicar la main class del proyecto
colocarse en la carpeta target
java -jar (nombre del .jar creado para ejecutar)